version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@3.1.0
  slack: circleci/slack@4.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build-1]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build-1

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build-1]
      - run:
          name: Back-end build
          command: |
             cd backend
              npm install
              npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build-1
  test-frontend:
    docker:
       - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build-1]
      - run:
          name: Run frontend test
          command: |
            cd frontend
            npm run test                
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build-1]
      - run:
          name: Run backend test
          command: |
            cd backend
            npm run test
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
            keys: [frontend-build-1]
      - run:
          name: Scan frontend
          command: |
            cd frontend
            npm audit fix --audit-level=critical --force
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build-1]
      - run:
          name: Scan backend
          command: |
            cd backend
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - slack/notify:
            event: fail
            template: basic_fail_1
      - slack/notify:
            event: pass
            template: success_tagged_deploy_1
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
          context: Alx
      - scan-frontend:
          requires: [build-frontend]
     